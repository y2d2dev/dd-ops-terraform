# DD-OPS Terraform Configuration Example
# Copy this file to terraform.tfvars and customize the values
# See README.md for detailed setup instructions

# ========================================
# Project Configuration
# ========================================
project_id  = "my-gcp-project-123"
environment = "prod"
region      = "asia-northeast1"
zone        = "asia-northeast1-a"

# ========================================
# Network Configuration
# ========================================
subnet_cidr                  = "10.0.0.0/24"
enable_private_google_access = true

# ========================================
# Cloud Run Configuration
# ========================================
# These will be automatically generated after setting up Artifact Registry
dd_ops_image         = "asia-northeast1-docker.pkg.dev/my-gcp-project-123/app-images/dd-ops:latest"
ocr_api_image        = "asia-northeast1-docker.pkg.dev/my-gcp-project-123/app-images/ocr-api:latest"
file_upload_image    = "asia-northeast1-docker.pkg.dev/my-gcp-project-123/app-images/file-upload:latest"
get_file_path_image  = "asia-northeast1-docker.pkg.dev/my-gcp-project-123/app-images/get-file-path:latest"

cloud_run_cpu_limit = {
  dd_ops      = "2"
  ocr_api     = "4"
  file_upload = "1"
}

cloud_run_memory_limit = {
  dd_ops      = "1Gi"
  ocr_api     = "8Gi"
  file_upload = "512Mi"
}

cloud_run_max_instances = {
  dd_ops      = 100
  ocr_api     = 10
  file_upload = 100
}

cloud_run_min_instances = {
  dd_ops      = 0
  ocr_api     = 1
  file_upload = 0
}

cloud_run_concurrency = 80

# ========================================
# Database Configuration
# ========================================
db_tier                       = "db-custom-2-7680"
db_disk_size                  = 100
db_disk_type                  = "PD_SSD"
db_backup_enabled             = true
db_backup_start_time          = "03:00"
db_maintenance_window_day     = 7
db_maintenance_window_hour    = 4
db_max_connections            = "100"
enable_point_in_time_recovery = true

# ========================================
# Storage Configuration
# ========================================
storage_location   = "ASIA-NORTHEAST1"
storage_class      = "STANDARD"
enable_versioning  = true
lifecycle_age_days = 90

# sub_domain will automatically generate:
# - Domain: {sub_domain}.dd-ops.net
# - CORS: https://{sub_domain}.dd-ops.net
sub_domain = "demo"
cors_methods = ["GET", "HEAD", "OPTIONS"]

# ========================================
# Load Balancer Configuration
# ========================================
# Domains will be automatically generated from sub_domain:
# - demo.dd-ops.net
# - www.demo.dd-ops.net

ssl_policy      = "MODERN"
cdn_cache_mode  = "CACHE_ALL_STATIC"
cdn_default_ttl = 3600
cdn_max_ttl     = 86400

# ========================================
# Service Accounts
# ========================================
create_service_accounts = true

service_account_roles = {
  dd_ops = [
    "roles/cloudsql.client",
    "roles/storage.objectViewer",
    "roles/storage.objectCreator",
    "roles/secretmanager.secretAccessor",
    "roles/logging.logWriter",
    "roles/monitoring.metricWriter",
  ]
  file_upload = [
    "roles/storage.objectAdmin",
    "roles/logging.logWriter",
  ]
  storage_url_signer = [
    "roles/storage.objectAdmin",
  ]
}

# ========================================
# Pub/Sub Configuration
# ========================================
pubsub_message_retention     = "86400s"
pubsub_ack_deadline          = 600
pubsub_max_delivery_attempts = 5
pubsub_min_backoff           = "10s"
pubsub_max_backoff           = "600s"

# ========================================
# Monitoring Configuration
# ========================================
enable_monitoring          = true
notification_channels      = []  # Add notification channel IDs here
alert_error_rate_threshold = 1.0
alert_duration             = "300s"
alert_auto_close           = "86400s"

# ========================================
# Security Configuration
# ========================================
enable_vpc_flow_logs       = true
flow_logs_sampling         = 0.5
require_ssl                = true
enable_deletion_protection = true

# ========================================
# Labels and Tags
# ========================================
labels = {
  managed_by  = "terraform"
  application = "dd-ops"
  environment = "prod"
  team        = "infrastructure"
}

resource_tags = {
  cloud_run = {
    type = "compute"
    tier = "application"
  }
  storage = {
    type = "storage"
    tier = "data"
  }
  database = {
    type = "database"
    tier = "data"
  }
}

# ========================================
# Budget Configuration
# ========================================
budget_amount           = 1000
budget_alert_thresholds = [50, 80, 100, 120]

# ========================================
# Backup Configuration
# ========================================
backup_retention_days          = 30
transaction_log_retention_days = 7

# ========================================
# GitHub Configuration
# ========================================
github_owner = "your-github-username"  # ← あなたのGitHubユーザー名またはOrg名
github_repo  = "dd-ops-app"            # ← リポジトリ名
branch_name  = "main"                  # ← ビルドトリガーするブランチ名

# ========================================
# Feature Flags
# ========================================
enable_cdn                     = true
enable_cloud_armor              = false
enable_private_service_connect = false
enable_auto_build             = true   # ← 自動ビルドを有効にするか